-CURBY-

*Means It's not necessary to implement right now
⩗Means It has been completed for the current stage of the project

CLI - not done
GUI - next step

-Modes-

Challenge mode: 
	fixed time to play(have 15-30 days)
	Try to live the healthiest(highest score) or worst(lowest score) live possible before time is up(beat high score)
ACADEMIA diet: 
	just eat once per day
	basically just learn how to interact with the game
Regular: 
	do whatever you want
	Explore the game
	Can die from not sleeping enough
	Can die from poisoning
Crazy mode:
	No limits on weight(can't die from eating too much)
	Food starts to extend to other people and bigger things the bigger you get
________________________________________________________________________________________________________________
|Classes:													|
|‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾|
|	Player(get String name):   (K, Caleb)									|
|		String name											|
|		int score											|
|		int fullness (0-100)										|
|		int weight (500)										|
|		*bool isSick (false)										|
|		*int sickDaysLeft(0)										|
|														|
|	        in drowsiness (0 -10)										|
|		int health (-100 to 100)									|
|		int timeToDoStuff 1										|
|		methods:											|
|			void eat(Consumable)	//calculate health gained and weight gained based on healthiness|
|						//and calories respectively, also add chance of death if	|
|						//eating when fullness is greater than 90			|
|						//Chance to call getSick from eating unhealthy food		|
|														|
|			int doActivity(Activity) {								|
|				//multiply time for activity by personal time(Timetodostuff)			|
|				//lose weight from intensity							|
|				//add chance of death if doing super intense activity with low health		|
|				*//some activiities can get you sick, but don't implement this right now	|
|				//However note health goes down based on intensity of the activity		|
|				//and even more when you're sick						|
|				//So chance of death is way higher when doing tactivities while sick		|
|				*//Some activities can also make you feel better(reduce sickdays)		|
|				*//Based on how healthy the activity is						|
|				return timeToDOActivitiy							|
|				}										|
|			void die()//call this function when appropriate						|
|			void sleep()~//setdrowsiness to 0							|
|			void getSick()//consistently lowers health for a set amount of "TIME"			|
|														|
|	⩗Consumable: Food, Trash										|
|		private string name;										|
|		private int calories										|
|		private int healthiness (-10 to 10)								|
|		methods:											|
|			bool beEaten()	//sets calories to null or 0						|
|					//returns true if is Trash						|
|			string getName()									|
|			Children										|
|			Food:											|
|				getName()	// adds rotten, fresh, rotting, etc state to name of food	|
|						// based on healthiness and time				|
|						// 9-10:	GodTier						|
|						// 6-8:		Perfect						|
|						// 2-5:		Healthy						|
|						// -1 - 1:	Fresh						|
|						// -2 - -5:	Spoiled						|
|						// -6 - -8:	Rotting						|
|						// -9 - -10:	RadioActive					|
|				getDetails()	//returns attributes						|
|			Trash:											|
|				//override beEaten() to call the superclass and return true			|
|	⩗Time: (Kanaetochi Okiyi)										|
|		int hours (max 24)										|
|		int days //starts at 0										|
|		add(int) // calculate new date based on added time						|
|		toString() // returns text in the format "Part_of_Day 00:00MM ${days}"				|
|	Stage(Player, mode, Time)										|
|		Player player											|
|		int mode											|
|		methods:											|
|			void askPlayerWhatTheyWantToD0()\\different menus for different modes			|
|			*void getFridge()\\gets Food from static fridge class					|
|			*void getGym()	\\ gets activities from staticgym class					|
|			// the below would be replaced by the above upon completion				|
|			// te below would be sent to a Fridge class and Gym class respectively			|
|			void listFoods()\\lists a set number of foods(static variable)				|
|					\\gives option to go to next number of foods				|
|					\\I dunno if they should have everything in their fridges or not	|
|			void listActivities()\\does the same as listfoods()but with activities			|
|														|
|	*GYM: //Handles activities										|
|		List<Activity> Activity_list									|
|		List beGotten() returns Activity_list								|
|				//only sends the first {X} elements						|
|	*Fridge: //Handles Food_list										|
|		List<Food> Food_list										|
|		List beGotten() returns Food_list								|
|				// only sends the first {X} elements						|
|														|
|_______________________________________________________________________________________________________________|
|	Research Data												|
|‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾|
|	FOOD^													|
|														|
|	CLASS<string name, int intensity,double time, bool canGetYOuSick, int healthiness>Activity list		|
|		toString() //returns attributes;								|
|														|
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
